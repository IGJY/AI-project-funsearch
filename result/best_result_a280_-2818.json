{"sample_order": 10, "function": "def priority(current_city: int, distances: np.ndarray, unvisited: set[int]) -> np.ndarray:\n    cities = np.array(list(unvisited), dtype=np.int64)\n    priorities = np.empty(len(cities), dtype=np.float64)\n    for i in range(len(cities)):\n        total_dist = np.sum(distances[current_city] * (cities[i] == 0))\n        priorities[i] = 1.0 / (total_dist + 1e-5)\n    return priorities\n\n", "score": -2818.6216422394746}