{"sample_order": 3, "function": "def priority(current_city: int, distances: np.ndarray, unvisited: set[int]) -> np.ndarray:\n    cities = np.array(list(unvisited), dtype=np.int64)\n    priorities = np.zeros(len(cities), dtype=np.float64)\n    for i in range(len(cities)):\n        dist = distances[current_city, cities[i]]\n        priorities[i] = 1.0 / (dist + 1)\n    return priorities\n\n", "score": -3148.1099349344036}