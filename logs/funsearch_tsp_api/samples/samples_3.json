{"sample_order": 3, "function": "def priority(current_city: int, distances: np.ndarray, unvisited: set[int]) -> np.ndarray:\n    \"\"\"\u5b9a\u4e49\u542f\u53d1\u5f0f\u7b56\u7565\uff0c\u4e3a TSP \u9009\u62e9\u4e0b\u4e00\u5ea7\u57ce\u5e02\"\"\"\n    priorities = np.array([1 / distances[current_city, city] if distances[current_city, city] > 0 else float('inf') for city in unvisited])\n    \n    for idx, city in enumerate(unvisited):\n        if current_city == city:\n            priorities[idx] = float('inf')\n    \n    for idx, city in enumerate(unvisited):\n        for neighbour in unvisited:\n            if distances[city, neighbour] < 10:\n                priorities[idx] += 2 / distances[city, neighbour]\n    \n    return priorities\n\n", "score": -Infinity}