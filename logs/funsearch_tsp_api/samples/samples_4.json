{"sample_order": 4, "function": "def priority(current_city: int, distances: np.ndarray, unvisited: set[int]) -> np.ndarray:\n    \"\"\"\u5b9a\u4e49\u542f\u53d1\u5f0f\u7b56\u7565\uff0c\u4e3a TSP \u9009\u62e9\u4e0b\u4e00\u5ea7\u57ce\u5e02\"\"\"\n    priorities = np.zeros(len(unvisited))\n    \n    for i, city in enumerate(unvisited):\n        if distances[current_city, city] > 0:\n            priorities[i] = 1 / distances[current_city, city]\n        else:\n            priorities[i] = float('inf')\n    \n    min_priority = np.min(priorities)\n    max_priority = np.max(priorities)\n    \n    for i in range(len(priorities)):\n        if priorities[i] == float('inf'):\n            priorities[i] = max_priority + 1\n        else:\n            priorities[i] = (priorities[i] - min_priority) / (max_priority - min_priority)\n    \n    return priorities\n\n", "score": -Infinity}