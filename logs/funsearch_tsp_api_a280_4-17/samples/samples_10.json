{"sample_order": 10, "function": "def priority(current_city: int, distances: np.ndarray, unvisited: set[int]) -> np.ndarray:\n    cities = np.array(list(unvisited), dtype=np.int64)\n    priorities = np.zeros(len(cities), dtype=np.float64)\n\n    for i in range(len(cities)):\n        city = cities[i]\n        dist = distances[current_city, city]\n        dp = -dist  # \u5f53\u524d\u57ce\u5e02\u5230\u76ee\u6807\u57ce\u5e02\u8ddd\u79bb\uff08\u8d1f\u53f7\u8868\u793a\u8ddd\u79bb\u8d8a\u8fd1\u4f18\u5148\u7ea7\u8d8a\u9ad8\uff09\n        dynamic = 1.0 / (1.0 + np.sum(distances[city]))  # \u5f53\u524d\u57ce\u5e02\u4e0e\u6240\u6709\u57ce\u5e02\u7684\u8fde\u901a\u7a0b\u5ea6\uff08\u8d8a\u5c0f\u8d8a\u597d\uff09\n        priorities[i] = dp * dynamic\n\n    return priorities\n\n", "score": -3259.0133236455067}